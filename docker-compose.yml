services:
  proxy:
    build:
      context: ./proxy
    image: mysite_proxy
    container_name: proxy_ct
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - auth
      - client
      - server
      - dbgui
  auth:
    build:
      context: ./auth
    image: mysite_auth
    container_name: auth_ct
    restart: always
    volumes:
      - ./auth/mount:/auth
      - ./auth/volume/node_modules:/auth/node_modules
    env_file:
      - .env
    environment:
      CHOKIDAR_USEPOLLING: true
  client:
    build: ./client
    image: mysite_client
    container_name: client_ct
    restart: always
    volumes:
      - ./client/mount:/var/www/html
      - ./client/volume/node_modules:/var/www/html/node_modules
    env_file:
      - .env
    environment:
      CHOKIDAR_USEPOLLING: true
  server:
    build:
      context: ./server
      args:
        - UID=${UID}
        - GID=${GID}
        - USERNAME=${USERNAME}
    env_file:
      - .env
    image: mysite_server
    container_name: server_ct
    restart: always
    volumes:
      - ./server/mount:/var/www/html
      - ./server/volume/storage:/var/www/html/storage
      - ./server/volume/vendor:/var/www/html/vendor
    depends_on:
      - db
  db:
    image: mysql:8.3.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    container_name: db_ct
    restart: always
    volumes:
      - ./db/volume/mysql:/var/lib/mysql
  dbgui:
    image: phpmyadmin:5.2.1
    container_name: dbgui_ct
    restart: always
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - db
